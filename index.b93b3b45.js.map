{"mappings":"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","sources":["./app.js"],"sourcesContent":["//BUDGET CONTROLLER\nvar budgetController = (function () {\n\n   var Expense = function(id, description, value) {\n       this.id = id;\n       this.description = description;\n       this.value = value;\n       this.percentage = -1;\n   };\n\n   Expense.prototype.calcPercentage = function(totalIncome) {\n\n    if(totalIncome > 0) {\n        this.percentage = Math.round((this.value / totalIncome) * 100);\n    } else {\n        this.percentage = -1;\n    }\n   };\n\n   Expense.prototype.getPercentage = function() {\n       return this.percentage;\n   };\n\n\n\n\n   var Income = function(id, description, value) {\n       this.id = id;\n       this.description = description;\n       this.value = value;\n    };\n\n    var calculateTotal = function(type) {\n        var sum = 0;\n        data.allItems[type].forEach(function(cur) {\n            sum += cur.value;\n        });\n        data.totals[type] = sum;\n    };\n\n    var data = {\n        allItems: {\n            exp: [],\n            inc: []\n        },\n        totals: {\n            exp: 0,\n            inc: 0\n        },\n        budget: 0,\n        percentage: -1\n    };\n\n    return {\n        addItem: function(type, des, val) {\n            var newItem, ID;\n\n            //create new id\n            if(data.allItems[type].length > 0) {\n                ID = data.allItems[type][data.allItems[type].length - 1].id + 1; \n            }else {\n                ID = 0;\n            }\n            \n\n            //create new item based on inc or exp type\n            if (type ==='exp') {\n                newItem = new Expense(ID, des, val);\n            } else if (type === 'inc') {\n                newItem = new Income(ID, des, val);\n            }\n \n            //push into our data structure\n            data.allItems[type].push(newItem);\n\n            //Return the new element\n            return newItem;\n\n        },\n\n        deleteItem: function(type, id) {\n            var ids, index;\n\n            //id = 3\n            var ids = data.allItems[type].map(function(current) {\n                return current.id;\n            });\n\n            index = ids.indexOf(id);\n\n            if (index !== -1) {\n                data.allItems[type].splice(index, 1);\n            }\n\n        },\n\n        calculateBudget: function() {\n\n            //Calculate total income and expenses\n            calculateTotal('exp');\n            calculateTotal('inc');\n\n            //Calculate the budget: income - expenses\n            data.budget = data.totals.inc - data.totals.exp;\n\n            //Calculate the percentage of the income that we spend\n            if (data.totals.inc > 0) {\n                data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);\n            } else {\n                data.percentage = -1;\n            }\n\n\n            //Expense = 100 and income 200, spent 50% = 100/200 = 0.5 * 100 = 50\n        },\n\n        calculatePercentages: function() {\n\n            data.allItems.exp.forEach(function(cur) {\n                cur.calcPercentage(data.totals.inc);\n            });\n        },\n\n        getPercentages: function() {\n\n            var allPerc = data.allItems.exp.map(function(cur) {\n                return cur.getPercentage();\n            });\n            return allPerc;\n        },\n\n        getBudget: function() {\n            return {\n                budget: data.budget,\n                totalInc: data.totals.inc,\n                totalExp: data.totals.exp,\n                percentage: data.percentage\n            };\n        },\n\n        testing: function() {\n            console.log(data);\n        }\n    }\n\n})();\n\n\n\n\n\n\n\n//UI CONTROLLER\nvar UIController = (function() {\n\n    var DOMstrings = {\n        inputType: '.add__type',\n        inputDescription: '.add__description',\n        inputValue: '.add__value',\n        inputBtn: '.add__btn',\n        incomeContainer: '.income__list',\n        expensesContainer: '.expenses__list',\n        budgetLabel: '.budget__value',\n        incomeLabel: '.budget__income--value',\n        expensesLabel: '.budget__expenses--value',\n        percentageLabel: '.budget__expenses--percentage',\n        container: '.container',\n        expensesPercLabel: '.item__percentage',\n        dateLabel: '.budget__title--month'\n    };\n\n\n    var formatNumber = function(num, type) {\n        var numSplit, dec, int;\n        /*\n        + or - before number\n        exactly two decimal points\n        comma seperating the thousands\n\n        2310.4567 -> + 2,310.46\n        2000 -> + 2,000.00\n         */\n\n        num = Math.abs(num);\n        num = num.toFixed(2);\n\n        numSplit = num.split('.');\n\n        int = numSplit[0];\n        if (int.length > 3) {\n            int = int.substr(0, int.length - 3) + ',' + int.substr(int.length - 3, 3); //i/p: 2310   o/p: 2,310\n        } \n\n        dec = numSplit[1];\n        \n\n        return (type === 'exp' ?  '-' :  '+') + ' ' + int + '.' + dec;\n\n    };\n\n    var nodeListForEach = function(list, callback) {\n        for (var i = 0; i < list.length; i++) {\n            callback(list[i], i);\n        }\n    };\n\n\n    return {\n        getInput: function() {\n            return {\n                type : document.querySelector(DOMstrings.inputType).value, //will be either inc or exp\n                description : document.querySelector(DOMstrings.inputDescription).value,\n                value : parseFloat(document.querySelector(DOMstrings.inputValue).value)\n            };\n        },\n\n        addListItem: function(obj, type) {\n\n            //Create HTML string with placeholder text\n            var html, newHTML, element;\n            if (type === 'inc') {\n                element = DOMstrings.incomeContainer;\n\n                html = '<div class=\"item clearfix\" id=\"inc-%id%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            } else if (type === 'exp') {\n                element = DOMstrings.expensesContainer;\n\n                html = '<div class=\"item clearfix\" id=\"exp-%id%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\n            }\n\n\n            //REplace the placeholder text with some actual data\n            newHTML = html.replace('%id%', obj.id);\n            newHTML = newHTML.replace('%description%', obj.description);\n            newHTML = newHTML.replace('%value%', formatNumber(obj.value, type));\n\n\n            //Insert the HTML into the DOM\n            document.querySelector(element).insertAdjacentHTML('beforeend', newHTML);\n\n        },\n\n        deleteListItem: function(selectorID) {\n            var el = document.getElementById(selectorID);\n            el.parentNode.removeChild(el);\n        },\n\n        clearFields: function() {\n            var fields;\n\n            fields = document.querySelectorAll(DOMstrings.inputDescription + ',' + DOMstrings.inputValue);\n\n            fieldsArr = Array.prototype.slice.call(fields);\n\n            fieldsArr.forEach(function(current, index, array) {\n                current.value = \"\";\n            });\n\n            fieldsArr[0].focus();\n\n        },\n\n        displayBudget: function(obj) {\n            var type;\n            obj.budget > 0 ? type = 'inc' : type = 'exp';\n\n            document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(obj.budget, type);\n            document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(obj.totalInc, 'inc');\n            document.querySelector(DOMstrings.expensesLabel).textContent = formatNumber(obj.totalExp, 'exp');\n\n            if (obj.percentage > 0) {\n                document.querySelector(DOMstrings.percentageLabel).textContent = obj.percentage + '%';\n            } else {\n                document.querySelector(DOMstrings.percentageLabel).textContent = '---';\n            }\n\n        },\n\n\n        displayPercentages: function(percentages) {\n\n            var fields = document.querySelectorAll(DOMstrings.expensesPercLabel);\n            \n            nodeListForEach(fields, function(current, index) {\n\n                if (percentages[index] > 0) {\n                    current.textContent = percentages[index] + '%';\n                } else {\n                    current.textContent = '---';\n                }               \n\n            });\n\n        },\n\n        displayMonth: function() {\n            var now, year, month, months;\n            now = new Date();\n\n            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n            month = now.getMonth();\n            year = now.getFullYear();\n            document.querySelector(DOMstrings.dateLabel).textContent = months[month] + ' ' + year;\n\n        },\n\n        changedType: function() {\n\n            var fields = document.querySelectorAll(\n                DOMstrings.inputType + ',' + \n                DOMstrings.inputDescription + ',' +\n                DOMstrings.inputValue\n            );\n                nodeListForEach(fields, function(cur) {\n                    cur.classList.toggle('red-focus');\n                });\n                document.querySelector(DOMstrings.inputBtn).classList.toggle('red');\n        },\n\n        getDomstrings: function() {\n            return DOMstrings;\n        }\n    };\n\n\n})();\n\n\n\n\n\n\n//GLOBAL APP CONTROLLER\nvar controller = (function(budgetCtrl, UICtrl) {\n\n    var setupEventListeners = function() {\n\n        var DOM = UICtrl.getDomstrings();\n\n        document.querySelector(DOM.inputBtn).addEventListener('click', ctrlAddItem); \n\n        document.addEventListener('keypress', function(event) {\n            if (event.keyCode === 13 || event.which === 13) {\n                ctrlAddItem();\n            }\n    \n        });\n\n        document.querySelector(DOM.container).addEventListener('click', ctrlDeleteItem);\n    \n        document.querySelector(DOM.inputType).addEventListener('change', UICtrl.changedType);\n\n    };\n\n    var updatePercentages = function() {\n\n        //1. Calculate the percentages\n        budgetCtrl.calculatePercentages();\n\n        //2. Read percentage from the budget controller\n        var percentages = budgetCtrl.getPercentages();\n\n        //3. Update the UI with new percentages\n        UICtrl.displayPercentages(percentages);\n    };\n\n\n    var updateBudget = function() {\n\n        //1. Calculate the budget\n        budgetCtrl.calculateBudget();\n\n        //2. REturn the budget\n        var budget = budgetCtrl.getBudget();\n\n        //3. Display the budget on UI\n        UICtrl.displayBudget(budget);\n\n    };\n\n    \n\n    var ctrlAddItem = function() {\n        var input, newItem;\n\n        //1. Get field input data\n        input = UICtrl.getInput();\n      \n        if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\n            //2. Add item to budget controler\n            newItem = budgetCtrl.addItem(input.type, input.description, input.value);\n\n            //3. Add new item to uI as well\n            UICtrl.addListItem(newItem, input.type);\n\n            //4. Clear the fields\n            UICtrl.clearFields();\n\n            //5. Calculate and update the budget\n            updateBudget();\n\n            //6. Calculate and update the percentages\n            updatePercentages();\n    \n        }\n\n    };\n\n    var ctrlDeleteItem = function(event) {\n        var itemID, splitID, type, ID;\n\n        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\n\n        if (itemID) {\n\n            //inc-1 \n            splitID = itemID.split('-');\n            type = splitID[0];\n            ID = parseInt(splitID[1]);\n\n            //1. Delete the item from data structure\n            budgetCtrl.deleteItem(type, ID);\n\n            //2. Delete the item from the UI\n            UICtrl.deleteListItem(itemID);\n\n            //3. Update and show the new budget\n            updateBudget();\n\n            //4. Calculate and update the percentages\n            updatePercentages();\n        }\n\n    };\n\n\n    return {\n        init: function() {\n            console.log('Application has started');\n            UICtrl.displayMonth();\n            UICtrl.displayBudget({\n                budget: 0,\n                totalInc: 0,\n                totalExp: 0,\n                percentage: -1\n            });\n            setupEventListeners();\n        }\n    };\n    \n\n})(budgetController, UIController);\n\n\ncontroller.init();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["DOMstrings","formatNumber","nodeListForEach","budgetCtrl","UICtrl","updatePercentages","updateBudget","ctrlAddItem","ctrlDeleteItem","$ccb34f28e7400d1cd1532f542ba823e9$var$budgetController","Expense","id","description","value","this","percentage","prototype","calcPercentage","totalIncome","Math","round","getPercentage","Income","calculateTotal","type","sum","data","allItems","forEach","cur","totals","exp","inc","budget","addItem","des","val","newItem","ID","length","push","deleteItem","index","map","current","indexOf","splice","calculateBudget","calculatePercentages","getPercentages","getBudget","totalInc","totalExp","testing","console","log","$ccb34f28e7400d1cd1532f542ba823e9$var$UIController","inputType","inputDescription","inputValue","inputBtn","incomeContainer","expensesContainer","budgetLabel","incomeLabel","expensesLabel","percentageLabel","container","expensesPercLabel","dateLabel","num","numSplit","int","abs","toFixed","split","substr","list","callback","i","getInput","document","querySelector","parseFloat","addListItem","obj","html","newHTML","element","replace","insertAdjacentHTML","deleteListItem","selectorID","el","getElementById","parentNode","removeChild","clearFields","fields","querySelectorAll","fieldsArr","Array","slice","call","array","focus","displayBudget","textContent","displayPercentages","percentages","displayMonth","now","year","month","months","Date","getMonth","getFullYear","changedType","classList","toggle","getDomstrings","input","isNaN","event","itemID","splitID","target","parseInt","init","DOM","addEventListener","keyCode","which"],"version":3,"file":"index.b93b3b45.js.map"}